<!-- Copyright © Pierre Sprimont, 2019
 
  This file is part of the WinCopies Framework.
 
  The WinCopies Framework is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
 
  The WinCopies Framework is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with the WinCopies Framework.  If not, see <https://www.gnu.org/licenses/>. -->

<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys_windows_controls="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
                    xmlns:windows="clr-namespace:WinCopies.GUI.Windows"
                    xmlns:guiDialogs="clr-namespace:WinCopies.GUI.Windows.Dialogs;assembly=WinCopies.GUI"
                    xmlns:dialogs="clr-namespace:WinCopies.GUI.Windows.Dialogs"
                    xmlns:commands="clr-namespace:WinCopies.Util.Commands;assembly=WinCopies.Util.Desktop"
                    xmlns:dataConverters="clr-namespace:WinCopies.Util.Data;assembly=WinCopies.Util.Desktop">
    <!--xmlns:commandBehavior="clr-namespace:AttachedCommandBehavior;assembly=AttachedCommandBehavior"
                    xmlns:sevenZip="clr-namespace:SevenZip;assembly=SevenZipSharp"
                    xmlns:local="clr-namespace:WinCopies.GUI.Windows"
                    xmlns:util="clr-namespace:WinCopies.Util;assembly=WinCopies.Util"
                    xmlns:controlModels="clr-namespace:WinCopies.GUI.Controls.Models;assembly=WinCopies.GUI.Models"
                    xmlns:dialogModels="clr-namespace:WinCopies.GUI.Windows.Dialogs.Models;assembly=WinCopies.GUI.Models"
                    xmlns:controls="clr-namespace:WinCopies.GUI.Controls;assembly=WinCopies.GUI.Controls"
    xmlns:guiExplorerDialogs="clr-namespace:WinCopies.GUI.Windows.Dialogs;assembly=WinCopies.GUI.Explorer"
                    xmlns:io="clr-namespace:WinCopies.IO;assembly=WinCopies.IO"-->

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/wincopies.gui;component/Themes/Generic.xaml" />
        <!--<ResourceDictionary Source="pack://application:,,,/wincopies.gui.controls;component/Themes/Generic.xaml" />-->
        <!--<ResourceDictionary Source="pack://application:,,,/wincopies.gui.explorer;component/Themes/Generic.xaml" />-->
        <ResourceDictionary>

            <!--String resources-->

            <!--<sys:String x:Key="SourceAndDestPaths" >Répertoires source et de destination :</sys:String>
            <sys:String x:Key="SourcePath" >Répertoire source :</sys:String>
            <sys:String x:Key="DestPath" >Répertoire de destination :</sys:String>
            <sys:String x:Key="SelectPath" >Sélectionner un répertoire...</sys:String>
            <sys:String x:Key="SelectPathDialogDescription" >Sélectionnez un répertoire à compresser :</sys:String>
            <sys:String x:Key="ArchiveFileProperties" >Propriétés du dossier compressé :</sys:String>
            <sys:String x:Key="ArchiveFormat" >Format d'archive :</sys:String>-->
            <!--<ResourceDictionary x:Key="OutArchiveFormats">
                <sys:String x:Key="Zip" >Zip</sys:String>
                <sys:String x:Key="SevenZip" >7zip</sys:String>
                <sys:String x:Key="GZip" >GZip</sys:String>
                <sys:String x:Key="BZip2" >BZip2</sys:String>
                <sys:String x:Key="Tar" >Tar</sys:String>
                <sys:String x:Key="XZ" >XZ</sys:String>
            </ResourceDictionary>
            <sys:String x:Key="CompressionLevel" >Niveau de compression :</sys:String>
            <ResourceDictionary x:Key="CompressionLevels">
                <sys:String x:Key="None" >Pas de compression supplémentaire</sys:String>
                <sys:String x:Key="Fast" >Très peu de compression</sys:String>
                <sys:String x:Key="Low" >Peu de compression</sys:String>
                <sys:String x:Key="Normal" >Niveau de compression normal</sys:String>
                <sys:String x:Key="High" >Compression haute</sys:String>
                <sys:String x:Key="Ultra" >Compression maximale (lent)</sys:String>
            </ResourceDictionary>
            <sys:String x:Key="CompressionMethod" >Méthode de compression :</sys:String>
            <ResourceDictionary x:Key="CompressionMethods">
                <sys:String x:Key="Copy" >Pas de compression supplémentaire.</sys:String>
                <sys:String x:Key="Deflate" >Méthode "Deflate"</sys:String>
                <sys:String x:Key="Deflate64" >Méthode "Deflate64"</sys:String>
                <sys:String x:Key="BZip2" >Méthode "Bzip2"</sys:String>
                <sys:String x:Key="Lzma" >Méthode "LZMA" basée sur l'algorythme Lempel-Ziv ; algorythme par défaut de 7-zip.</sys:String>
                <sys:String x:Key="Lzma2" >"LZMA" version 2, LZMA avec multithreading amélioré et habituellement une légère diminution de la taille de l'archive de sortie.</sys:String>
                <sys:String x:Key="Ppmd" >Méthode "PPMd" ; recommandée pour la compression de textes. Cette méthode est créditée dans la boîte de dialogue À propos de.</sys:String>
                <sys:String x:Key="Default" >Méthode de compression par défaut.</sys:String>
            </ResourceDictionary>
            <sys:String x:Key="CompressionMode" >Mode de compression :</sys:String>
            <ResourceDictionary x:Key="CompressionModes">
                <sys:String x:Key="Append" >Ajouter à un fichier existant</sys:String>
                <sys:String x:Key="Create" >Créer un nouveau fichier</sys:String>
            </ResourceDictionary>
            <sys:String x:Key="PreserveDirectoryStructure" >Préserver la structure de répertoires</sys:String>
            <sys:String x:Key="IncludeEmptyDirectories" >Inclure les répertoires vides</sys:String>
            <sys:String x:Key="PathsToIncludeToTheArchive" >Répertoires et fichiers à inclure à l'archive (présents à titre indicatif) :</sys:String>
            <sys:String x:Key="ItemsAreOnlyThereForInformation" >Ces éléments sont présents uniquement à titre d'information et peuvent être modifiés lors du processus.</sys:String>-->

            <!--Data converters-->

            <!--<dialogs:EnumToStringConverter x:Key="EnumToStringConverter" />
            <dialogs:ArchiveCompressionToolTipConverter x:Key="ArchiveCompressionToolTipsConverter" />-->

            <!--Controls-->

            <!--<TextBlock x:Key="ArchiveFormatDescription" >
                <TextBlock.Inlines>
                    <Run Text="Le format d'archive est le type de fichier dans lequel les fichiers compressés seront stockés." />
                    <LineBreak />
                    <Run Text="Le format d'archive n'est pas toujours dépendant de l'algorithme utilisé pour la compression des fichiers. Si vous choisissez le format ZIP, vous pourrez ouvrir l'archive dans l'Explorateur Windows." />
                    <LineBreak />
                    <Run Text="Si vous souhaitez compresser les fichiers dans un format libre, vous pouvez choisir le format 7-ZIP." />
                </TextBlock.Inlines>
            </TextBlock>
            <TextBlock x:Key="ArchiveCompressionMethodDescription" >
                <TextBlock.Inlines>
                    <Run Text="La méthode de compression utilisée pour compresser les fichiers." />
                    <LineBreak />
                    <Run Text="La méthode de compression n'est pas toujours dépandante du format d'archive." />
                    <LineBreak />
                    <Run Text="Si vous ne savez pas quelle méthode de compression utiliser, vous pouvez laisser cette valeur à la valeur par défaut." />
                    <LineBreak />
                    <Run Text="Vous pouvez aussi choisir de copier directement les fichiers dans l'archive (non recommandé)." />
                </TextBlock.Inlines>
            </TextBlock>
            <TextBlock x:Key="ArchiveCompressionLevelDescription" >
                <TextBlock.Inlines>
                    <Run Text="Le niveau de compression des fichiers." />
                    <LineBreak />
                    <Run Text="Un niveau de compression plus élevé résultera en une taille de fichier généralement plus faible, mais allongera le temps de (dé)compression." />
                    <LineBreak />
                    <Run Text="Gardez également à l'esprit que tous les fichiers ne sont pas compressables. Certains fichiers, une fois compressés, peuvent même résulter en une taille compressée plus élevée que la taille du/des fichier(s) source." />
                </TextBlock.Inlines>
            </TextBlock>
            <TextBlock x:Key="ArchiveCompressionModeDescription" >
                <TextBlock.Inlines>
                    <Run Text="Le mode de compression des fichiers." />
                    <LineBreak />
                    <Run Text="Si vous choisissez d'ajouter les fichiers dans un nouveau fichier compressé, un nouveau fichier sera créé pour la copie, même si un fichier du même nom existe déjà." />
                    <LineBreak />
                    <Run Text="Si vous choisissez d'ajouter les fichiers dans un fichier existant, un nouveau fichier sera créé uniquement si un fichier du même nom ne se trouve pas encore dans l'emplacement spécifié." />
                </TextBlock.Inlines>
            </TextBlock>-->

            <!--Control templates-->

            <!--<ControlTemplate x:Key="InputBoxContentLabelTemplate" x:Shared="false" >
                <Label Content="{Binding Label, RelativeSource={RelativeSource AncestorType={x:Type dialogs:InputBox}, Mode=FindAncestor}}" FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:InputBox}, Mode=FindAncestor}}" />
            </ControlTemplate>

            <ControlTemplate x:Key="InputBoxContentTextBoxTemplate" x:Shared="false" >
                <controls:TextBox PlaceholderMode="{Binding PlaceholderMode, RelativeSource={RelativeSource AncestorType={x:Type dialogs:InputBox}, Mode=FindAncestor}}" PlaceholderProperties="{Binding Placeholder, RelativeSource={RelativeSource AncestorType={x:Type dialogs:InputBox}, Mode=FindAncestor}}" RealText="{Binding Text, RelativeSource={RelativeSource AncestorType={x:Type dialogs:InputBox}, Mode=FindAncestor}, Mode=TwoWay}" FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:InputBox}, Mode=FindAncestor}}" TabIndex="1" VerticalContentAlignment="Center" FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" >
                    <commandBehavior:EventArgsHandler.HandleEventHandler>
                        <x:Array xmlns:s="clr-namespace:System;assembly=mscorlib" Type="{x:Type s:String}">
                            <s:String>
                                TextChanged
                            </s:String>
                        </x:Array>
                    </commandBehavior:EventArgsHandler.HandleEventHandler>
                    <commandBehavior:CommandBehavior.Event>
                        TextChanged
                    </commandBehavior:CommandBehavior.Event>
                    <commandBehavior:CommandBehavior.Command>
                        <x:Static Member="commands:Commands.CommonCommand" />
                    </commandBehavior:CommandBehavior.Command>
                    <commandBehavior:CommandBehavior.CommandParameter>
                        <Binding Path="(commandBehavior:EventArgsHandler.LastEventArgs)" RelativeSource="{RelativeSource Self}" />
                    </commandBehavior:CommandBehavior.CommandParameter>
                </controls:TextBox>
            </ControlTemplate>

            <ControlTemplate x:Key="ComboInputBoxContentComboBoxTemplate">
                <ComboBox FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:InputBox}, Mode=FindAncestor}}" TabIndex="1" VerticalContentAlignment="Center" >
                    <commandBehavior:CommandBehaviorCollection.Behaviors>
                        <commandBehavior:EventArgsHandler>
                            <commandBehavior:EventArgsHandler.HandleEventHandler>
                                <x:Array xmlns:s="clr-namespace:System;assembly=mscorlib" Type="{x:Type s:String}">
                                    <s:String>
                                        TextChanged
                                    </s:String>
                                    <s:String>
                                        SelectionChanged
                                    </s:String>
                                </x:Array>
                            </commandBehavior:EventArgsHandler.HandleEventHandler>
                        </commandBehavior:EventArgsHandler>
                        <commandBehavior:BehaviorBinding Event="TextChanged" Command="{x:Static commands:Commands.CommonCommand}" CommandParameter="{Binding (commandBehavior:EventArgsHandler.LastEventArgs), RelativeSource={RelativeSource Self}}" />
                        <commandBehavior:BehaviorBinding Event="SelectionChanged" Command="{x:Static commands:Commands.CommonCommand}" CommandParameter="{Binding (commandBehavior:EventArgsHandler.LastEventArgs), RelativeSource={RelativeSource Self}}" />
                    </commandBehavior:CommandBehaviorCollection.Behaviors>
                </ComboBox>
            </ControlTemplate>

            <ControlTemplate x:Key="ComboInputBoxTemplate">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Control Focusable="False">
                        <Control.Style>
                            <Style TargetType="{x:Type Control}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Control}">
                                            <StackPanel FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:ComboInputBox}, Mode=FindAncestor}}" >
                                                <Control Template="{StaticResource InputBoxContentLabelTemplate}" />
                                                <Control Template="{StaticResource ComboInputBoxContentComboBoxTemplate}" />
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static sys_windows_controls:Orientation.Horizontal}" >
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Grid VerticalAlignment="Top">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <Control Template="{StaticResource InputBoxContentLabelTemplate}" />
                                                        <Control Template="{StaticResource ComboInputBoxContentComboBoxTemplate}" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Control.Style>
                    </Control>
                    <Label Grid.Row="1" Content="{Binding ErrorText, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="{Binding ErrorText, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={ dialogs:ErrorLabelVisibilityConverter}}" Foreground="Red" />
                </Grid>
            </ControlTemplate>-->

        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <dataConverters:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />

    <Style BasedOn="{StaticResource {x:Type Window}}" TargetType="{x:Type windows:Window}" >
        <Style.Triggers>
            <Trigger Property="IsInHelpMode" Value="true" >
                <Setter Property="Cursor" Value="Help" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type dialogs:DialogWindow}" BasedOn="{StaticResource {x:Type windows:Window}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dialogs:DialogWindow}">
                    <Grid Background="White">
                        <Grid.RowDefinitions >
                            <RowDefinition />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <ContentPresenter Content="{TemplateBinding Content}" />
                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                            <Control Grid.Row="1" HorizontalAlignment="{Binding ButtonAlignment, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={dialogs:ButtonAlignmentToHorizontalAlignmentConverter}}" Focusable="False" >
                                <Control.Style>
                                    <Style TargetType="{x:Type Control}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DialogButton, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static guiDialogs:DialogButton.OK}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Button Command="{x:Static commands:DialogCommands.Ok}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.OK}}" />
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DialogButton, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static guiDialogs:DialogButton.OKCancel}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <StackPanel FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:DialogWindow}, Mode=FindAncestor}}" Orientation="Horizontal" >
                                                                <Button Command="{x:Static commands:DialogCommands.Ok}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.OK}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.Cancel}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Cancel}}" IsCancel="True" />
                                                            </StackPanel>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DialogButton, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static guiDialogs:DialogButton.AbortRetryIgnore}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <StackPanel FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:DialogWindow}, Mode=FindAncestor}}" Orientation="Horizontal" >
                                                                <Button Command="{x:Static commands:DialogCommands.Abort}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Abort}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.Retry}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Retry}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.Ignore}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Ignore}}" IsCancel="True" />
                                                            </StackPanel>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DialogButton, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static guiDialogs:DialogButton.YesNoCancel}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <StackPanel FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:DialogWindow}, Mode=FindAncestor}}" Orientation="Horizontal" >
                                                                <Button Command="{x:Static commands:DialogCommands.Yes}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Yes}}" IsEnabled="{Binding IsPredicateValid, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.No}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.No}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.Cancel}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Cancel}}" IsCancel="True" />
                                                            </StackPanel>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DialogButton, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static guiDialogs:DialogButton.YesNo}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <StackPanel FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:DialogWindow}, Mode=FindAncestor}}" Orientation="Horizontal" >
                                                                <Button Command="{x:Static commands:DialogCommands.Yes}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Yes}}" IsEnabled="{Binding IsPredicateValid, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.No}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.No}}" />
                                                            </StackPanel>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DialogButton, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static guiDialogs:DialogButton.RetryCancel}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <StackPanel FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:DialogWindow}, Mode=FindAncestor}}" Orientation="Horizontal" >
                                                                <Button Command="{x:Static commands:DialogCommands.Retry}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Retry}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.Cancel}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Cancel}}" IsCancel="True" />
                                                            </StackPanel>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DialogButton, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static guiDialogs:DialogButton.CancelTryContinue}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <StackPanel FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:DialogWindow}, Mode=FindAncestor}}" Orientation="Horizontal" >
                                                                <Button Command="{x:Static commands:DialogCommands.Cancel}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Cancel}}" IsCancel="True" />
                                                                <Button Command="{x:Static commands:DialogCommands.Retry}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Retry}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.Continue}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Continue}}" />
                                                            </StackPanel>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DialogButton, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static guiDialogs:DialogButton.ContinueIgnoreCancel}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <StackPanel FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:DialogWindow}, Mode=FindAncestor}}" Orientation="Horizontal" >
                                                                <Button Command="{x:Static commands:DialogCommands.Continue}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Continue}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.Ignore}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Ignore}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.Cancel}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Cancel}}" IsCancel="True" />
                                                            </StackPanel>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DialogButton, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static guiDialogs:DialogButton.OKApplyCancel}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <StackPanel FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:DialogWindow}, Mode=FindAncestor}}" Orientation="Horizontal" >
                                                                <Button Command="{x:Static commands:DialogCommands.Ok}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.OK}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.Apply}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Apply}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.Cancel}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Cancel}}" IsCancel="True" />
                                                            </StackPanel>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DialogButton, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static guiDialogs:DialogButton.RetryIgnoreCancel}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <StackPanel FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:DialogWindow}, Mode=FindAncestor}}" Orientation="Horizontal" >
                                                                <Button Command="{x:Static commands:DialogCommands.Retry}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Retry}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.Ignore}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Ignore}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.Cancel}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Cancel}}" IsCancel="True" />
                                                            </StackPanel>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DialogButton, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static guiDialogs:DialogButton.IgnoreCancel}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <StackPanel FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:DialogWindow}, Mode=FindAncestor}}" Orientation="Horizontal" >
                                                                <Button Command="{x:Static commands:DialogCommands.Ignore}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Ignore}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.Cancel}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Cancel}}" IsCancel="True" />
                                                            </StackPanel>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DialogButton, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static guiDialogs:DialogButton.YesToAllNoToAllCancel}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <StackPanel FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:DialogWindow}, Mode=FindAncestor}}" Orientation="Horizontal" >
                                                                <Button Command="{x:Static commands:DialogCommands.YesToAll}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.YesToAll}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.NoToAll}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.NoToAll}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.Cancel}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.Cancel}}" IsCancel="True" />
                                                            </StackPanel>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DialogButton, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static guiDialogs:DialogButton.YesToAllNoToAll}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <StackPanel FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:DialogWindow}, Mode=FindAncestor}}" Orientation="Horizontal" >
                                                                <Button Command="{x:Static commands:DialogCommands.YesToAll}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.YesToAll}}" />
                                                                <Button Command="{x:Static commands:DialogCommands.NoToAll}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsDefault="{Binding DefaultButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static guiDialogs:DefaultButton.NoToAll}}" />
                                                            </StackPanel>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding CustomButtonsSource, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={dataConverters:IsNullConverter}}" Value="false">
                                                <DataTrigger.Setters>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Control}" >
                                                                <ItemsControl x:Name="PART_ItemsControl" ItemsSource="{Binding CustomButtonsSource, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}}" ItemTemplate="{Binding CustomButtonTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}}" ItemTemplateSelector="{Binding CustomButtonTemplateSelector, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:DialogWindow}}}">
                                                                    <ItemsControl.Resources>
                                                                        <ResourceDictionary>
                                                                            <ResourceDictionary.MergedDictionaries>
                                                                                <ResourceDictionary Source="pack://application:,,,/wincopies.gui.templates;component/Themes/Generic.xaml" />
                                                                            </ResourceDictionary.MergedDictionaries>
                                                                        </ResourceDictionary>
                                                                    </ItemsControl.Resources>

                                                                    <ItemsControl.ItemsPanel>
                                                                        <ItemsPanelTemplate>
                                                                            <StackPanel Orientation="Horizontal" />
                                                                        </ItemsPanelTemplate>
                                                                    </ItemsControl.ItemsPanel>
                                                                </ItemsControl>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Control.Style>
                            </Control>
                            <Button Command="Help" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" Visibility="{Binding ShowHelpButtonAsCommandButton, RelativeSource={RelativeSource TemplatedParent}, Converter={dataConverters:BooleanToVisibilityConverter}}" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="{x:Type local:CustomControl1}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomControl1}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style x:Shared="false" BasedOn="{StaticResource {x:Type guiDialogs:DialogWindow}}" TargetType="{x:Type dialogs:InputBox}">
        <Setter Property="CommandParameter" Value="{Binding Text, RelativeSource={RelativeSource Self}}" />
        <Setter Property="PlaceholderMode" Value="OnTextChange" />
        <Setter Property="DialogButton" Value="OKCancel" />
        <Setter Property="DefaultButton" Value="OK" />
        <Setter Property="Content" >
            <Setter.Value>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Control Focusable="False">
                        <Control.Style>
                            <Style TargetType="{x:Type Control}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Control}">
                                            <StackPanel FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type dialogs:InputBox}, Mode=FindAncestor}}" >
                                                <Control Template="{StaticResource InputBoxContentLabelTemplate}" />
                                                <Control Template="{StaticResource InputBoxContentTextBoxTemplate}" />
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static sys_windows_controls:Orientation.Horizontal}" >
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Grid VerticalAlignment="Top">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <Control Template="{StaticResource InputBoxContentLabelTemplate}" />
                                                        <Control Template="{StaticResource InputBoxContentTextBoxTemplate}" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Control.Style>
                    </Control>
                    <Label Grid.Row="1" Content="{Binding ErrorText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:InputBox}}}" Visibility="{Binding ErrorText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:InputBox}}, Converter={ dialogs:ErrorLabelVisibilityConverter}}" Foreground="Red" />
                </Grid>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Shared="false" BasedOn="{ StaticResource {x:Type dialogs:InputBox}}" TargetType="{x:Type dialogs:ComboInputBox}" />

    <Style x:Shared="false" BasedOn="{StaticResource {x:Type guiDialogs:DialogWindow}}" TargetType="{x:Type dialogs:ArchiveCompression}" >
        <Setter Property="DialogButton" Value="OKCancel" />
        <Setter Property="DefaultButton" Value="OK" />
        <Setter Property="Content" >
            <Setter.Value>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <GroupBox Header="{StaticResource SourceAndDestPaths}">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Label Content="{StaticResource SourcePath}" />
                            <TextBox Grid.Column="1" Text="{Binding SourcePath, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:ArchiveCompression}}}" />
                            <Button Grid.Column="2" Command="{x:Static dialogs:Commands.SelectPath}" CommandParameter="SourcePath" Content="{StaticResource SelectPath}" />

                            <Label Grid.Row="1" Content="{StaticResource DestPath}" />
                            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding DestPath, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:ArchiveCompression}}}" />
                            <Button Grid.Column="2" Grid.Row="1" Command="{x:Static dialogs:Commands.SelectPath}" CommandParameter="DestPath" Content="{StaticResource SelectPath}" />
                        </Grid>
                    </GroupBox>
                    <GroupBox Grid.Row="1" Header="{StaticResource ArchiveFileProperties}" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <Label Content="{StaticResource ArchiveFormat}" />
                            <ComboBox Grid.Column="1" ItemsSource="{Binding Converter={StaticResource EnumToStringConverter}, ConverterParameter={x:Type sevenZip:OutArchiveFormat}}" SelectedItem="{Binding ArchiveFormat, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:ArchiveCompression}}, Converter={StaticResource EnumToStringConverter}, ConverterParameter=SelectedItem}" ToolTip="{Binding IsInHelpMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:ArchiveCompression}}, Converter={StaticResource ArchiveCompressionToolTipsConverter}, ConverterParameter=ArchiveFormat}" />
                            <Label Grid.Column="2" Content="{StaticResource CompressionLevel}" />
                            <ComboBox Grid.Column="3" ItemsSource="{Binding Converter={StaticResource EnumToStringConverter}, ConverterParameter={x:Type sevenZip:CompressionLevel}}" SelectedItem="{Binding CompressionLevel, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:ArchiveCompression}}, Converter={StaticResource EnumToStringConverter}, ConverterParameter=SelectedItem}" ToolTip="{Binding IsInHelpMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:ArchiveCompression}}, Converter={StaticResource ArchiveCompressionToolTipsConverter}, ConverterParameter=ArchiveCompressionLevel}" />
                            <Label Grid.Row="1" Content="{StaticResource CompressionMethod}" />
                            <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Converter={StaticResource EnumToStringConverter}, ConverterParameter={x:Type sevenZip:CompressionMethod}}" SelectedItem="{Binding CompressionMethod, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:ArchiveCompression}}, Converter={StaticResource EnumToStringConverter}, ConverterParameter=SelectedItem}" ToolTip="{Binding IsInHelpMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:ArchiveCompression}}, Converter={StaticResource ArchiveCompressionToolTipsConverter}, ConverterParameter=ArchiveCompressionMethod}" >
                                <ComboBox.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource {x:Type ComboBoxItem}}" TargetType="ComboBoxItem" >
                                        <Setter Property="Visibility" >
                                            <Setter.Value >
                                                <MultiBinding Converter="{dialogs:CompressionMethodToVisibilityConverter}" >
                                                    <Binding Path="ArchiveFormat" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:ArchiveCompression}}" />
                                                    <Binding />
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                            <Label Grid.Row="1" Grid.Column="2" Content="{StaticResource CompressionMode}" />
                            <ComboBox Grid.Row="1" Grid.Column="3" ItemsSource="{Binding Converter={StaticResource EnumToStringConverter}, ConverterParameter={x:Type sevenZip:CompressionMode}}" SelectedItem="{Binding CompressionMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:ArchiveCompression}}, Converter={StaticResource EnumToStringConverter}, ConverterParameter=SelectedItem}" ToolTip="{Binding IsInHelpMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:ArchiveCompression}}, Converter={StaticResource ArchiveCompressionToolTipsConverter}, ConverterParameter=ArchiveCompressionMode}" />
                            <CheckBox Grid.Row="2" Content="{StaticResource PreserveDirectoryStructure}" IsChecked="{Binding DirectoryStructure, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:ArchiveCompression}}}" />
                            <CheckBox Grid.Row="3" Content="{StaticResource IncludeEmptyDirectories}" IsChecked="{Binding IncludeEmptyDirectories, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:ArchiveCompression}}}" />

                        </Grid>
                    </GroupBox>
                    <GroupBox Grid.Row="2" Header="{StaticResource PathsToIncludeToTheArchive}" >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <TextBox AcceptsReturn="True" Text="{Binding Paths, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:ArchiveCompression}}}" />
                            <Label Grid.Row="1" Content="{StaticResource ItemsAreOnlyThereForInformation}" />
                        </Grid>
                    </GroupBox>
                </Grid>
            </Setter.Value>
        </Setter>
        <Setter Property="ShowHelpButton" Value="True" />
    </Style>-->

</ResourceDictionary>
